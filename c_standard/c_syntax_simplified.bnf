%token int_const id string
%%

translation_unit	: decl
			| translation_unit decl
			;
decl			: 'int' init_declarator_list ';'
			; 声明语句
decl_list		: decl
			| decl_list decl
			;
init_declarator_list	: init_declarator
			| init_declarator_list ',' init_declarator
			; 声明列表
init_declarator		: id
			| id '=' assignment_exp
			;
stat			: exp_stat
			| compound_stat
			| selection_stat
			| iteration_stat
			| jump_stat
			;
jump_stat		: 'break' ';'
			;
exp_stat		: exp ';'
			|	';'
			;
compound_stat		: '{' decl_list stat_list '}'
			| '{'		stat_list '}'
			| '{' decl_list		'}'
			| '{'			'}'
			; 复合语句， 入口
stat_list		: stat
			| stat_list stat
			;
selection_stat		: 'if' '(' exp ')' stat
			| 'if' '(' exp ')' stat 'else' stat
			;
iteration_stat		: 'while' '(' exp ')' stat
			| 'do' stat 'while' '(' exp ')' ';'
			| 'for' '(' exp ';' exp ';' exp ')' stat
			| 'for' '(' exp ';' exp ';'	')' stat
			| 'for' '(' exp ';'	';' exp ')' stat
			| 'for' '(' exp ';'	';'	')' stat
			| 'for' '('	';' exp ';' exp ')' stat
			| 'for' '('	';' exp ';'	')' stat
			| 'for' '('	';'	';' exp ')' stat
			| 'for' '('	';'	';'	')' stat
			;
exp			: assignment_exp
			| exp ',' assignment_exp
			;
assignment_exp		: equality_exp
			| id '=' assignment_exp
			;
equality_exp		: relational_exp
			| equality_exp '==' relational_exp
			| equality_exp '!=' relational_exp
			;
relational_exp		: additive_exp
			| relational_exp '<' additive_exp
			| relational_exp '>' additive_exp
			| relational_exp '<=' additive_exp
			| relational_exp '>=' additive_exp
			;
additive_exp		: mult_exp
			| additive_exp '+' mult_exp
			| additive_exp '-' mult_exp
			;
mult_exp		: unary_exp
			| mult_exp '*' unary_exp
			| mult_exp '/' unary_exp
			;
unary_exp		: postfix_exp
			| unary_operator unary_exp
			;
unary_operator		: '+' | '-'
			;
postfix_exp		: primary_exp
			| postfix_exp '(' ')'
			| postfix_exp '(' argument_exp_list ')'
			| postfix_exp '++'
			| postfix_exp '--'
			;
primary_exp		: id
			| int_const
			| string
			;
argument_exp_list	: assignment_exp
			| argument_exp_list ',' assignment_exp
			;
